//
// +------------------------------------------------------------+
// | Configure parameters for the android build. Android DSL    |
// +------------------------------------------------------------+
// ||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||

apply plugin: 'com.android.application'

repositories {
    // Snapshots
    maven {
        url "https://oss.sonatype.org/content/repositories/snapshots/"
    }

    // Maven Central
    mavenCentral()

    // Jcenter is superset of Maven Central
    jcenter()

    // Project local
    flatDir {
        dirs 'libs'
    }

    // System local
    maven {
        url 'file:' + System.getenv('HOME') + '/.m2/repository'
    }
}

android {
    compileSdkVersion 21
    buildToolsVersion "21.1.2"

    defaultConfig {
        applicationId "org.brainail.Everboxing"

        minSdkVersion 14
        targetSdkVersion 21

        versionCode 1
        versionName "1.0"

        // Build config fields
        buildConfigField "String", "MODULE_NAME", "\"$project.name\""
    }

    sourceSets {
        // Remapping the androidTest sourceSet to the test folder
        androidTest.setRoot('src/test')
    }

    buildTypes {
        debug {
            debuggable true

            // Build config fields
            buildConfigField "boolean", "LOGGABLE", "true"
        }

        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'

            // Build config fields
            buildConfigField "boolean", "LOGGABLE", "false"
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    lintOptions {
        // set to true to turn off analysis progress reporting by lint
        quiet false
        // if true, stop the gradle build if errors are found
        abortOnError false
        // if true, only report errors
        ignoreWarnings false
        // if true, check all issues, including those that are off by default
        checkAllWarnings false
        // if true, treat all warnings as errors
        warningsAsErrors false
        // if true, generate an XML report for use by for example Jenkins
        xmlReport false
        // if true, generate an HTML report (with issue explanations, sourcecode, etc)
        htmlReport true
        // optional path to report (default will be lint-results.html in the build dir)
        htmlOutput file("$project.buildDir/reports/lint/lint.html")
    }
}

//
// +------------------------------------------------------------+
// | Dependencies                                               |
// +------------------------------------------------------------+
// ||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||

dependencies {
    // Libs folder
    compile fileTree(dir: 'libs', include: ['*.jar'])

    // Support libraries
    compile 'com.android.support:appcompat-v7:21.0.3'

    // Google play services
    compile 'com.google.android.gms:play-services-base:6.5.87'

    // Google auth, drive, etc
    compile 'com.google.code.gson:gson:2.3'
    compile 'com.google.api-client:google-api-client:1.19.0'
    compile 'com.google.api-client:google-api-client-android:1.19.0'
    compile 'com.google.apis:google-api-services-drive:v2-rev154-1.19.0'
    compile 'com.google.http-client:google-http-client-android:1.19.0'
    compile 'com.google.http-client:google-http-client:1.19.0'
    compile 'com.google.http-client:google-http-client-gson:1.19.0'
    compile 'com.google.oauth-client:google-oauth-client:1.19.0'
    compile 'com.google.code.findbugs:jsr305:1.3.9'

    // Material stuff
    compile 'com.afollestad:material-dialogs:0.6.3.0'
    compile 'com.malinskiy:materialicons:1.0.0'

    // Fonts
    compile 'uk.co.chrisjenx:calligraphy:1.2.0'
}

//
// +------------------------------------------------------------+
// | Configure tests dependencies                               |
// +------------------------------------------------------------+
// ||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||

apply plugin: 'robolectric'
apply from: 'robolectric-iml.gradle'

dependencies {
    androidTestCompile 'junit:junit:4.10'

    androidTestCompile ('org.robolectric:robolectric:2.4') {
        exclude module: 'commons-logging'
        exclude module: 'httpclient'
    }

    androidTestCompile "com.squareup:fest-android:1.0.8"
    androidTestCompile "org.powermock:powermock-module-junit4:1.5.6"
    androidTestCompile "org.powermock:powermock-api-mockito:1.5.6"
}

project.gradle.taskGraph.whenReady {
    testDebug {
        ignoreFailures = true
    }
}

//
// +------------------------------------------------------------+
// | Configure analyzers                                        |
// +------------------------------------------------------------+
// ||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||

// Add checkstyle, findbugs, pmd and lint to the check task.
task analyzecode(type: SourceTask) {
    description 'All checks for code'
}

analyzecode.dependsOn 'checkstyle', 'findbugs', 'pmd', 'lint'

//
// +------------------------------------------------------------+
// | Configure checkstyle                                       |
// +------------------------------------------------------------+
// ||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||

apply plugin: 'checkstyle'

task checkstyle(type: Checkstyle) {
    description 'Check code style'
    ignoreFailures = true
    configFile file('config/checkstyle/checkstyle.xml')
    source 'src/main/java'
    include '**/*.java'
    exclude '**/gen/**'
    classpath = files()
}

//
// +------------------------------------------------------------+
// | Configure findbugs                                         |
// +------------------------------------------------------------+
// ||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||

apply plugin: "findbugs"

task findbugs(type: FindBugs) {
    description 'Find bugs'
    ignoreFailures = true
    source = fileTree('src/main/java/')
    classes = fileTree('build/intermediates/classes/debug/')
    classpath = files()
    effort = 'max'
    reportLevel = "high"
    include '**/*.java'
    exclude '**/gen/**'
    excludeFilter = new File('config/findbugs/findbugs-config.xml')
    reports {
        html.enabled = true
        xml.enabled = !html.enabled
    }
}

//
// +------------------------------------------------------------+
// | Configure pmd                                              |
// +------------------------------------------------------------+
// ||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||

apply plugin: "pmd"

task pmd(type: Pmd) {
    description 'Analyze code via Pmd'
    ignoreFailures = true
    include '**/*.java'
    exclude '**/gen/**'
    source = fileTree('src/main/java/')
    ruleSetFiles = files("config/pmd/pmd-config.xml")
}
